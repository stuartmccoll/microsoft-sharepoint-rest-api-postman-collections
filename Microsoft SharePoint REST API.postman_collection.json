{
	"info": {
		"_postman_id": "379f08e6-35b0-4935-b9b7-6da2883e3bcf",
		"name": "Microsoft SharePoint REST API",
		"description": "A collection of Postman requests for the Microsoft SharePoint REST API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Application",
			"item": [
				{
					"name": "Get Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff7f1ecc-984a-4adb-a066-a688ec6703f4",
								"exec": [
									"const json_response_body = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"appReg_bearerToken\", json_response_body.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{appReg_clientId}}@{{realm}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{appReg_clientSecret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{principal}}/{{targetHost}}@{{realm}}",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://accounts.accesscontrol.windows.net/{{realm}}/tokens/OAuth/2",
							"protocol": "https",
							"host": [
								"accounts",
								"accesscontrol",
								"windows",
								"net"
							],
							"path": [
								"{{realm}}",
								"tokens",
								"OAuth",
								"2"
							]
						},
						"description": "Retrieves an access token for use in later Microsoft SharePoint REST API requests."
					},
					"response": []
				},
				{
					"name": "Get Realm GUID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0274eafa-369e-4dcc-9548-62a3caa77ce9",
								"exec": [
									"// Retrieve the realm GUID from the WWW-Authenticate header",
									"",
									"const response_headers = pm.response.headers.all();",
									"",
									"for (let i = 0; i < response_headers.length; i++) {",
									"    if (response_headers[i]['key'] === \"WWW-Authenticate\") {",
									"",
									"        // Retrieve the entire WWW-Authenticate header",
									"        const www_authenticate_header = response_headers[i]['value'];",
									"",
									"        // Find the index within the header of the realm key",
									"        const realm_position = www_authenticate_header.indexOf(\"realm\");",
									"",
									"        // Retrieve the realm GUID from the WWW-Authenticate header",
									"        const realm_guid = www_authenticate_header.substring((realm_position + 7), (realm_position + 43));",
									"",
									"        // Set the realm Postman environment variable",
									"        postman.setEnvironmentVariable(\"realm\", realm_guid);",
									"",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{targetHost}}/_vti_bin/client.svc/",
							"protocol": "https",
							"host": [
								"{{targetHost}}"
							],
							"path": [
								"_vti_bin",
								"client.svc",
								""
							]
						},
						"description": "This request will return an unauthorised response, but the small piece of JavaScript within the Test tab will set a realm environment variable if the request returns a WWW-Authenticate header containing a realm key."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Lists",
			"item": [
				{
					"name": "Get ListItemEntityTypeFullName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6117ce77-bc32-498d-b737-ea9b122efe39",
								"exec": [
									"const json_response_body = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ListItemEntityTypeFullName\", json_response_body.ListItemEntityTypeFullName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{appReg_bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json;odata=nometadata",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{targetHost}}/_api/web/lists/GetByTitle('Test list')?$select=ListItemEntityTypeFullName",
							"protocol": "https",
							"host": [
								"{{targetHost}}"
							],
							"path": [
								"_api",
								"web",
								"lists",
								"GetByTitle('Test list')"
							],
							"query": [
								{
									"key": "$select",
									"value": "ListItemEntityTypeFullName"
								}
							]
						},
						"description": "Retrieves the ListItemEntityTypeFullName for the given SharePoint list and stores this as an environment variable for later use."
					},
					"response": []
				},
				{
					"name": "Create New List Item (By List Title)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "54b76a93-5f54-4157-a06b-abf15220f25c",
								"exec": [
									"// Obtain the ListItemEntityTypeFullName before sending request",
									"",
									"pm.sendRequest(",
									"    {",
									"        url: \"https://\" + pm.environment.get('targetHost') + \"/_api/web/lists/GetByTitle('Test list')?$select=ListItemEntityTypeFullName\",",
									"        header: {",
									"            \"Authorization\": \"Bearer \" + pm.environment.get('appReg_bearerToken'),",
									"            \"Accept\": \"application/json;odata=nometadata\"",
									"        }",
									"    },",
									"    function (err, response) {",
									"        const json_response_body = response.json();",
									"        postman.setEnvironmentVariable(\"ListItemEntityTypeFullName\", json_response_body.ListItemEntityTypeFullName);",
									"    }",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{appReg_bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json;odata=verbose",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json;odata=verbose",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"__metadata\": {\n        \"type\": \"{{ListItemEntityTypeFullName}}\"\n    },\n    \"Title\": \"Item Name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{targetHost}}/_api/web/lists/GetByTitle('Test list')/items",
							"protocol": "https",
							"host": [
								"{{targetHost}}"
							],
							"path": [
								"_api",
								"web",
								"lists",
								"GetByTitle('Test list')",
								"items"
							]
						},
						"description": "This request will create a new item in a given SharePoint list (by referencing the list's title). Replace 'Test list' in the URL with your own SharePoint list name."
					},
					"response": []
				},
				{
					"name": "Create New List Item (By List GUID)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "74e9fd42-1727-4a50-b6cd-3d600ac5b374",
								"exec": [
									"// Obtain the ListItemEntityTypeFullName before sending request",
									"",
									"pm.sendRequest(",
									"    {",
									"        url: \"https://\" + pm.environment.get('targetHost') + \"/_api/web/lists/GetByTitle('Test list')?$select=ListItemEntityTypeFullName\",",
									"        header: {",
									"            \"Authorization\": \"Bearer \" + pm.environment.get('appReg_bearerToken'),",
									"            \"Accept\": \"application/json;odata=nometadata\"",
									"        }",
									"    },",
									"    function (err, response) {",
									"        const json_response_body = response.json();",
									"        postman.setEnvironmentVariable(\"ListItemEntityTypeFullName\", json_response_body.ListItemEntityTypeFullName);",
									"    }",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{appReg_bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json;odata=verbose",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json;odata=verbose",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"__metadata\": {\n        \"type\": \"{{ListItemEntityTypeFullName}}\"\n    },\n    \"Title\": \"Item Name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{targetHost}}/_api/web/lists(guid'{list_guid}')/items",
							"protocol": "https",
							"host": [
								"{{targetHost}}"
							],
							"path": [
								"_api",
								"web",
								"lists(guid'{list_guid}')",
								"items"
							]
						},
						"description": "This request will create a new item in a given SharePoint list using the specified list's GUID. Replace \"{list_guid}\" in the URL with your own SharePoint list GUID."
					},
					"response": []
				},
				{
					"name": "Delete List Item (By List GUID)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc441ddf-eb1a-42ed-a3dd-c0302378bd52",
								"exec": [
									"// Obtain the ListItemEntityTypeFullName before sending request",
									"",
									"pm.sendRequest(",
									"    {",
									"        url: \"https://\" + pm.environment.get('targetHost') + \"/_api/web/lists/GetByTitle('Test list')?$select=ListItemEntityTypeFullName\",",
									"        header: {",
									"            \"Authorization\": \"Bearer \" + pm.environment.get('appReg_bearerToken'),",
									"            \"Accept\": \"application/json;odata=nometadata\"",
									"        }",
									"    },",
									"    function (err, response) {",
									"        const json_response_body = response.json();",
									"        postman.setEnvironmentVariable(\"ListItemEntityTypeFullName\", json_response_body.ListItemEntityTypeFullName);",
									"    }",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{appReg_bearerToken}}"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json;odata=verbose"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json;odata=verbose"
							},
							{
								"key": "If-Match",
								"value": "*",
								"type": "text"
							},
							{
								"key": "X-HTTP-Method",
								"value": "DELETE",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{targetHost}}/_api/web/lists(guid'{list_guid}')/items({item_id})",
							"protocol": "https",
							"host": [
								"{{targetHost}}"
							],
							"path": [
								"_api",
								"web",
								"lists(guid'{list_guid}')",
								"items({item_id})"
							]
						},
						"description": "This request will delete a specified item in a given SharePoint list using the specified list's GUID and the specified item's ID. Replace \"{list_guid}\" in the URL with your own SharePoint list GUID, and \"{item_id}\" with your own item ID."
					},
					"response": []
				},
				{
					"name": "Delete List Item (By List Title)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d2bc60c8-e614-4a99-9ef8-18cd13139f71",
								"exec": [
									"// Obtain the ListItemEntityTypeFullName before sending request",
									"",
									"pm.sendRequest(",
									"    {",
									"        url: \"https://\" + pm.environment.get('targetHost') + \"/_api/web/lists/GetByTitle('Test list')?$select=ListItemEntityTypeFullName\",",
									"        header: {",
									"            \"Authorization\": \"Bearer \" + pm.environment.get('appReg_bearerToken'),",
									"            \"Accept\": \"application/json;odata=nometadata\"",
									"        }",
									"    },",
									"    function (err, response) {",
									"        const json_response_body = response.json();",
									"        postman.setEnvironmentVariable(\"ListItemEntityTypeFullName\", json_response_body.ListItemEntityTypeFullName);",
									"    }",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{appReg_bearerToken}}"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json;odata=verbose"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json;odata=verbose"
							},
							{
								"key": "If-Match",
								"value": "*",
								"type": "text"
							},
							{
								"key": "X-HTTP-Method",
								"value": "DELETE",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"__metadata\": {\n        \"type\": \"{{ListItemEntityTypeFullName}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{targetHost}}/_api/web/lists/GetByTitle('{list_title}')/items({item_id})",
							"protocol": "https",
							"host": [
								"{{targetHost}}"
							],
							"path": [
								"_api",
								"web",
								"lists",
								"GetByTitle('{list_title}')",
								"items({item_id})"
							]
						},
						"description": "This request will delete a specified item in a given SharePoint list using the specified list's GUID and the specified item's ID. Replace \"{list_guid}\" in the URL with your own SharePoint list GUID, and \"{item_id}\" with your own item ID."
					},
					"response": []
				},
				{
					"name": "Create List",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "692e304a-d460-4f92-9b91-e6cd4d5aed53",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{appReg_bearerToken}}"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json;odata=verbose"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json;odata=verbose"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"__metadata\": {\n        \"type\": \"SP.List\"\n    },\n    \"AllowContentTypes\": true,\n    \"BaseTemplate\": 100,\n    \"ContentTypesEnabled\": true,\n    \"Description\": \"My list description\",\n    \"Title\": \"My List Title\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{targetHost}}/_api/web/lists",
							"protocol": "https",
							"host": [
								"{{targetHost}}"
							],
							"path": [
								"_api",
								"web",
								"lists"
							]
						},
						"description": "This request will create a new SharePoint list. Replace the 'Description' and 'Title' values in the request Body section with your chosen values."
					},
					"response": []
				},
				{
					"name": "Delete List (By GUID)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d54e6362-d335-4983-a73b-8c4e2986e3d8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{appReg_bearerToken}}"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json;odata=verbose"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json;odata=verbose"
							},
							{
								"key": "If-Match",
								"value": "*",
								"type": "text"
							},
							{
								"key": "X-HTTP-Method",
								"value": "DELETE",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{targetHost}}/_api/web/lists(guid'{list_guid}')",
							"protocol": "https",
							"host": [
								"{{targetHost}}"
							],
							"path": [
								"_api",
								"web",
								"lists(guid'{list_guid}')"
							]
						},
						"description": "This request will delete a SharePoint list based on the GUID specified in the URI. Replace the \"{list_guid}\" value in the URI with your chosen SharePoint list GUID."
					},
					"response": []
				},
				{
					"name": "Delete List (By Title)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cbeb4a39-0b03-4862-8825-7144b33a10fc",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{appReg_bearerToken}}"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json;odata=verbose"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json;odata=verbose"
							},
							{
								"key": "If-Match",
								"type": "text",
								"value": "*"
							},
							{
								"key": "X-HTTP-Method",
								"type": "text",
								"value": "DELETE"
							}
						],
						"url": {
							"raw": "https://{{targetHost}}/_api/web/lists/GetByTitle('{list_title}')",
							"protocol": "https",
							"host": [
								"{{targetHost}}"
							],
							"path": [
								"_api",
								"web",
								"lists",
								"GetByTitle('{list_title}')"
							]
						},
						"description": "This request will delete a SharePoint list based on the title specified in the URI. Replace the \"{list_title}\" value in the URI with your chosen SharePoint list title."
					},
					"response": []
				},
				{
					"name": "Add File Attachment to List Item",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "805f5de2-579b-411b-ab7b-43d5b48edaae",
								"exec": [
									"// Obtain the ListItemEntityTypeFullName before sending request",
									"",
									"pm.sendRequest(",
									"    {",
									"        url: \"https://\" + pm.environment.get('targetHost') + \"/_api/web/lists/GetByTitle('Test list')?$select=ListItemEntityTypeFullName\",",
									"        header: {",
									"            \"Authorization\": \"Bearer \" + pm.environment.get('appReg_bearerToken'),",
									"            \"Accept\": \"application/json;odata=nometadata\"",
									"        }",
									"    },",
									"    function (err, response) {",
									"        const json_response_body = response.json();",
									"        postman.setEnvironmentVariable(\"ListItemEntityTypeFullName\", json_response_body.ListItemEntityTypeFullName);",
									"    }",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{appReg_bearerToken}}"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": ""
							},
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://{{targetHost}}/_api/web/lists/GetByTitle('Test list')/items(1)/AttachmentFiles/add(FileName='filename.ext')",
							"protocol": "https",
							"host": [
								"{{targetHost}}"
							],
							"path": [
								"_api",
								"web",
								"lists",
								"GetByTitle('Test list')",
								"items(1)",
								"AttachmentFiles",
								"add(FileName='filename.ext')"
							]
						},
						"description": "This request will attach a file to a given SharePoint list item. Replace 'Test list' in the URL with your own SharePoint list name, '1' with your own SharePoint list item id and 'filename.ext' with your chosen file name and extension."
					},
					"response": []
				},
				{
					"name": "Get List Item",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{appReg_bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json;odata=verbose",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{targetHost}}/_api/web/lists/GetByTitle('Test list')/items(1)",
							"protocol": "https",
							"host": [
								"{{targetHost}}"
							],
							"path": [
								"_api",
								"web",
								"lists",
								"GetByTitle('Test list')",
								"items(1)"
							]
						},
						"description": "This request will retrieve a given list item by the id of the item. Replace 'Test list' with your own SharePoint list name, and replace '1' with the id of the item you are trying to retrieve."
					},
					"response": []
				},
				{
					"name": "Get List (By GUID)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{appReg_bearerToken}}"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json;odata=verbose"
							}
						],
						"url": {
							"raw": "https://{{targetHost}}/_api/web/lists(guid'{list_guid}')",
							"protocol": "https",
							"host": [
								"{{targetHost}}"
							],
							"path": [
								"_api",
								"web",
								"lists(guid'{list_guid}')"
							]
						},
						"description": "This request will retrieve a SharePoint list using the specified list GUID. Replace \"{list_guid}\" with your own SharePoint list GUID."
					},
					"response": []
				},
				{
					"name": "Get List (By Title)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{appReg_bearerToken}}"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json;odata=verbose"
							}
						],
						"url": {
							"raw": "https://{{targetHost}}/_api/web/lists/GetByTitle('{list_title}')",
							"protocol": "https",
							"host": [
								"{{targetHost}}"
							],
							"path": [
								"_api",
								"web",
								"lists",
								"GetByTitle('{list_title}')"
							]
						},
						"description": "This request will retrieve a SharePoint list using the specified list title. Replace \"{list_title}\" with your own SharePoint list title."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3b0c59ac-205c-4ffe-991d-5924a9721236",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "bddbba1c-0923-43cc-8569-e529ebe68fbe",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}